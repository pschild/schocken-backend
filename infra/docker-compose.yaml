name: schocken

networks:
  schocken:
    name: schocken
    external: true  # important for Cloudflare to access services via tunnel

volumes:
  schocken-pgdata:
    name: schocken-pgdata

services:
  postgres:
    image: postgres:15.7
    container_name: schocken-postgres
    restart: unless-stopped
    networks:
      - schocken
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: rootPW
      HOPTIMISTEN_DATABASE_NAME: hoptimisten
    ports:
      - 5439:5432
    volumes:
      - ./db/init.sh:/docker-entrypoint-initdb.d/init.sh
      - schocken-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  schocken-backend:
    image: schocken-backend:latest
    build:
      context: ../
    restart: unless-stopped
    container_name: schocken-backend
    networks:
      - schocken
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy

  cloudflare-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks:
      - schocken

  proxy:
    image: nginx:latest
    container_name: proxy
    ports:
      - 80:80
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
    networks:
      - schocken
